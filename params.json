{"name":"Sega-cd-snatcher-language-patcher","tagline":"Sega CD Snatcher Language Patcher","body":"Sega-CD-Snatcher-Language-Patcher\r\n\r\n##############\r\n#   INTRO    #\r\n##############\r\n\r\nThis is a CakePHP project to modify the texts from the great videogame Snatcher from Hideo Kojima for Sega/Mega CD.\r\n\r\n################\r\n#   CONTENT    #\r\n################\r\n\r\n- Console/spatcher.php: Script to patch sega cd ISO\r\n- Controller/Component/BinaryComponent.php: Component class from CakePHP to generate translated binary files with the data from a file game.\r\n- Controller/Component/QuicksaveComponent.php: Component class from CakePHP to patch quicksaves from Kega Fusion and include translated binary files. Usefull if you want to try a binary file from a Game directly without patch the ISO and use a save game.\r\n\r\n################\r\n# REQUIREMENTS # \r\n################\r\n\r\n- CakePHP 2.4.8 or later\r\n- jQuery 1.10 or later\r\n- PHP 5.2 or later\r\n- Web Server and MySQL database\r\n\r\n###########\r\n# INSTALL #\r\n###########\r\n\r\n- Download CakePHP (www.cakephp.org) and create a new project with cake bake script (I will call \"app\" here).\r\n- Copy the folders from this project and paste into the new project.\r\n- Use the sql file from Config/Schema/snatcher.sql to create database schema in MySQL.\r\n- Copy data from Config/readme to the end of your core CakePHP file in app/Config/core.php (and change \"esp\" and \"es\" to your new language for translation).\r\n- Copy app in your localhost directory from your web server and set user, groups and necesary permissions (app/tmp and app/File needs write permissions).\r\n- To access web, first time you need create an user administrator:\r\n\t- Open Controller/UsersController.php with any text editor\r\n\t- Uncomment the line 26:\r\n\t\t$this->Auth->allowedActions = array('admin_index', 'admin_add', 'admin_changePassword');\r\n\t- Go to http://localhost/app/admin/users/\r\n\t- Click at \"New User\" and create a new user with the role \"Admin\" selected.\r\n\t- Comment the line 26 from Controller/UsersController.php file.\r\n\t- Go to http://localhost/app/ and sign in.\r\n\r\n#############\r\n# PATCH ISO #\r\n#############\r\n\r\nThere is a spatcher.php CLI script in app/Console path for patch your ISO. Only needs specify the path from Snatcher Sega CD ISO and a folder where you stored the new binary files.\r\n\r\n###############\r\n# DESCRIPTION #\r\n###############\r\n\r\nBinary->wirteFile returns the new filesize. There is a limit for this files: 55296 bytes\r\n\r\nInstrucctions for use:\r\n\r\n1) For use add to your Controller from CakePHP:\r\n\r\n\tpublic $components = array('Binary');\r\n\r\n2) Add in your method:\r\n\r\n\t$filesize = $this->Binary->writeFile(\r\n\t\t\t$path_ori_files . $filename,\r\n\t\t\t$path_new_files . $filename,\r\n\t\t\t$data);\r\n\r\n$path_ori_files is the path where store original files from Sega CD Snatcher (f.e /app/Files/snatcher/)\r\n\r\n$path_new_files is the patch where you can store new files pathed.\r\n\r\n$filename is the name to patch (f. e. SP06.BIN)\r\n\r\n$data is a array with this structure:\r\n\r\n- characher_id: identify the character id necesary for patch offset for each character from the Game. You can find her names in SUBCODE.BIN\r\n- position: It is the integer position from 0x3800, then first text in binary files has the integer position 0 (each word is one position)\r\n- new_text: It is the translation text. It is important data array has all translations in order acording binary file you want patch.\r\n- nchars: The number of characters from old original texts. I use it for avoid calculate the length in the \"foreach\" original texts loop.\r\n\r\nAn example:\r\n\r\narray(\r\n\t(int) 0 => array(\r\n\t\t'character_id' => '1',\r\n\t\t'position' => '0',\r\n\t\t'new_text' => 'CONTINUAR',\r\n\t\t'nchars' => '13'\r\n\t),\r\n\t(int) 1 => array(\r\n\t\t'character_id' => '1',\r\n\t\t'position' => '14',\r\n\t\t'new_text' => 'TERMINAR',\r\n\t\t'nchars' => '6'\r\n\t),\r\n\t(int) 2 => array(\r\n\t\t'character_id' => '3',\r\n\t\t'position' => '21',\r\n\t\t'new_text' => '¡Oh no! ¡No hay suficiente <8>memoria<11> para guardar m¡s  datos! TendrÃ¡s que <8>sobrescribir<11> los datos existentes para guardar.',\r\n\t\t'nchars' => '143'\r\n\t),\r\n\r\n\t...\r\n\r\n\t(int) n => array(\r\n\t\t'character_id' => '3',\r\n\t\t'position' => '165',\r\n\t\t'new_text' => 'Â¡Guardado!',\r\n\t\t'nchars' => '15',\r\n\r\n)\r\n\r\n3) You must convert special chars of the game into a <{number}> wildcard. The special chars are converted with array special_chars_orig:\r\n\r\n\t\t/** \r\n\t\t * WARNING!!! NO CHANGE THE ORDER OF special_chars \r\n\t\t * */ \r\n\t\t$this->special_chars_orig = array(\r\n\t\t\t\t$this->new_line,   pack(\"H*\" , \"ec\"), $this->new_page, // <0>, <1>, <2>\r\n\t\t\t\tpack(\"H*\" , \"ee\"), pack(\"H*\" , \"f0\"), pack(\"H*\" , \"fe\"), // <3>, <4>, <5>\r\n\t\t\t\tpack(\"H*\" , \"f4\"), pack(\"H*\" , \"fa\"), pack(\"H*\", \"fb\"), // <6>, <7>, <8>\r\n\t\t\t\tpack(\"H*\", \"fc\"),  pack(\"H*\" , \"fd\"), pack(\"H*\" , \"f9\"), // <9>, <10>, <11>\r\n\t\t\t\tpack(\"H*\" , \"f7\"), pack(\"H*\" , \"f8\")  // <12>, <13>\r\n\t\t);\r\n\r\n\r\nWhen the script tranlates your new texts, it replaces the wildcard <{number}> with his special char defined in special_chars_orig.\r\n\r\n##########\r\n# Thanks #\r\n##########\r\n\r\n- Joxer for create and manage the translate project for Snatcher from EOL.\r\n- Maitrus for his technical knowledge and helpful with romhacking and for explain me how to modify the binary files and iso.\r\n- m4x1m0, jam007, Tolvatar, djnox, Manveru Ainu, livekraft, tonycc, Drasglaf, randam_hajile for their helpful translating the texts and review.\r\n \r\n###########\r\n# License #\r\n###########\r\n\r\nThe source code for the web project is licensed under the GPL version 3 or later\r\n(see LICENSE).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}